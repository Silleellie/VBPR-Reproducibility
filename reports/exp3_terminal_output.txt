(venv) C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility>python pipeline.py -epo 10 20 -exp exp3
########################### Downloading raw sources ############################

Downloading...
From: https://datarepo.eng.ucsd.edu/mcauley_group/data/tradesy/tradesy.json.gz
To: C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\raw\tradesy.json.gz
100%|██████████| 3.94M/3.94M [00:00<00:00, 8.45MB/s]

Tradesy raw feedback downloaded into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\raw\tradesy.json!
--------------------------------------------------------------------------------
Downloading npy matrix containing tradesy images...: 100%|██████████| 3.40G/3.40G [08:30<00:00, 7.15MiB/s]

Tradesy images downloaded into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\raw\TradesyImgPartitioned.npy!


####################### Filtering positive interactions ########################

Importing raw feedbacks...: 100%|██████████| 128152/128152 [00:06<00:00, 19169.28it/s]
Cardinality of raw dataset:
Number of users: 128152
Number of items: 184281
Number of positive interactions: 526233
--------------------------------------------------------------------------------
Cardinality of preprocessed dataset:
Number of users: 19243
Number of items: 165906
Number of positive interactions: 394421

Preprocessed dataset saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\interim\filtered_positive_interactions_tradesy.csv!


########## Downloading original visual features to build the item map ##########

Tradesy raw feedback were already downloaded into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\raw\tradesy.json, skipped
--------------------------------------------------------------------------------
Downloading binary file containing visual features...: 100%|██████████| 5.47G/5.47G [15:35<00:00, 6.27MiB/s]

Visual features downloaded into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\raw\image_features_tradesy.b!


########## Extracting original visual features to build the item map ###########

Extracting only useful features from binary source...: 100%|██████████| 165906/165906 [04:28<00:00, 617.65it/s]
Feature extracted from binary source!
Total items extracted: 165906/165906

CSV containing mapping between item ids and features into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\processed\item_map.csv!
NPY feature matrix saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\processed\features_matrix.npy!


########################## Extracting images dataset ###########################

Loading NPY matrix containing all tradesy images...
Extracting only relevant images for the experiment...: 100%|██████████| 326393/326393 [04:54<00:00, 1106.72it/s]

165906/165906 images extracted and saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\interim\tradesy_images!
CSV containing image id and relative path of each img saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\interim\tradesy_images_paths.csv!


########################### Building train/test set ############################

Splitting interactions in train/test: 100%|██████████| 394421/394421 [00:01<00:00, 338832.64it/s]
0 interactions were skipped because involved missing items
0 users were skipped because they had less than one interaction (thus they couldn't be split in train/test)

Train set saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\processed\train_set.csv
Test set saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\processed\test_set.csv
User map saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\processed\user_map.csv


### Performing ClayRS experiment with vgg19 and resnet50 feature extraction ####

Random seed set as 42
--------------------------------------------------------------------------------
INFO - ********   Processing field: image_path   ********
Downloading/Locating images:  100%|██████████| 165906/165906 [00:02<00:00]
Processing and producing contents with Pytorch Image Models (vgg19):  100%|██████████| 5185/5185 [59:19<00:00]
Downloading/Locating images:  100%|██████████| 165906/165906 [00:01<00:00]
Processing and producing contents with Pytorch Image Models (resnet50):  100%|██████████| 5185/5185 [23:31<00:00]
Serializing contents:  100%|██████████| 165906/165906 [18:54<00:00]

Output of the Content Analyzer saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\exp3_ca_output!
Report of the Content Analyzer saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\yaml_clayrs\exp3_ca_report.yml!
--------------------------------------------------------------------------------
Importing ratings:  100%|██████████| 375178/375178 [00:01<00:00]
********************************************************************************
Performing VBPR training for representation:  vgg19
********************************************************************************
Considering number of epochs 10
--------------------------------------------------------------------------------
INFO - Filtering only positive interactions...
INFO - All interactions have score >= than threshold=0, no filtering is performed
Loading features from serialized items...:  100%|██████████| 165906/165906 [02:51<00:00]
INFO - Starting VBPR training!
[Epoch 1/10, Batch 2932/2932, Loss: 85.314]:  100%|██████████| 2932/2932 [00:23<00:00]
[Epoch 2/10, Batch 2932/2932, Loss: 61.751]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 3/10, Batch 2932/2932, Loss: 34.834]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 4/10, Batch 2932/2932, Loss: 17.523]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 5/10, Batch 2932/2932, Loss: 9.834]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 6/10, Batch 2932/2932, Loss: 6.355]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 7/10, Batch 2932/2932, Loss: 4.732]:  100%|██████████| 2932/2932 [00:23<00:00]
[Epoch 8/10, Batch 2932/2932, Loss: 3.827]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 9/10, Batch 2932/2932, Loss: 3.347]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 10/10, Batch 2932/2932, Loss: 2.997]:  100%|██████████| 2932/2932 [00:26<00:00]
INFO - Training complete!
INFO - Computing visual bias and theta items for faster ranking...
INFO - Done!
ClayRS model for 10 epochs saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\models\exp3\vbpr_clayrs_vgg19_10.ml!
Report of the RecSys phase for 10 epochs saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\yaml_clayrs\exp3_rs_report\rs_report_vgg19_10.yml!
--------------------------------------------------------------------------------
Considering number of epochs 20
--------------------------------------------------------------------------------
INFO - Filtering only positive interactions...
INFO - All interactions have score >= than threshold=0, no filtering is performed
Loading features from serialized items...:  100%|██████████| 165906/165906 [02:10<00:00]
INFO - Starting VBPR training!
[Epoch 1/20, Batch 2932/2932, Loss: 85.314]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 2/20, Batch 2932/2932, Loss: 61.751]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 3/20, Batch 2932/2932, Loss: 34.834]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 4/20, Batch 2932/2932, Loss: 17.523]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 5/20, Batch 2932/2932, Loss: 9.834]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 6/20, Batch 2932/2932, Loss: 6.355]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 7/20, Batch 2932/2932, Loss: 4.732]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 8/20, Batch 2932/2932, Loss: 3.827]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 9/20, Batch 2932/2932, Loss: 3.347]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 10/20, Batch 2932/2932, Loss: 2.997]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 11/20, Batch 2932/2932, Loss: 2.754]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 12/20, Batch 2932/2932, Loss: 2.674]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 13/20, Batch 2932/2932, Loss: 2.595]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 14/20, Batch 2932/2932, Loss: 2.744]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 15/20, Batch 2932/2932, Loss: 2.753]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 16/20, Batch 2932/2932, Loss: 2.899]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 17/20, Batch 2932/2932, Loss: 2.967]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 18/20, Batch 2932/2932, Loss: 3.049]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 19/20, Batch 2932/2932, Loss: 2.976]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 20/20, Batch 2932/2932, Loss: 3.090]:  100%|██████████| 2932/2932 [00:22<00:00]
INFO - Training complete!
INFO - Computing visual bias and theta items for faster ranking...
INFO - Done!
ClayRS model for 20 epochs saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\models\exp3\vbpr_clayrs_vgg19_20.ml!
Report of the RecSys phase for 20 epochs saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\yaml_clayrs\exp3_rs_report\rs_report_vgg19_20.yml!
********************************************************************************
Performing VBPR training for representation:  resnet50
********************************************************************************
Considering number of epochs 10
--------------------------------------------------------------------------------
INFO - Filtering only positive interactions...
INFO - All interactions have score >= than threshold=0, no filtering is performed
Loading features from serialized items...:  100%|██████████| 165906/165906 [02:11<00:00]
INFO - Starting VBPR training!
[Epoch 1/10, Batch 2932/2932, Loss: 84.862]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 2/10, Batch 2932/2932, Loss: 60.355]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 3/10, Batch 2932/2932, Loss: 33.653]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 4/10, Batch 2932/2932, Loss: 16.716]:  100%|██████████| 2932/2932 [00:23<00:00]
[Epoch 5/10, Batch 2932/2932, Loss: 9.282]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 6/10, Batch 2932/2932, Loss: 6.011]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 7/10, Batch 2932/2932, Loss: 4.436]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 8/10, Batch 2932/2932, Loss: 3.571]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 9/10, Batch 2932/2932, Loss: 3.095]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 10/10, Batch 2932/2932, Loss: 2.781]:  100%|██████████| 2932/2932 [00:22<00:00]
INFO - Training complete!
INFO - Computing visual bias and theta items for faster ranking...
INFO - Done!
ClayRS model for 10 epochs saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\models\exp3\vbpr_clayrs_resnet50_10.ml!
Report of the RecSys phase for 10 epochs saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\yaml_clayrs\exp3_rs_report\rs_report_resnet50_10.yml!
--------------------------------------------------------------------------------
Considering number of epochs 20
--------------------------------------------------------------------------------
INFO - Filtering only positive interactions...
INFO - All interactions have score >= than threshold=0, no filtering is performed
Loading features from serialized items...:  100%|██████████| 165906/165906 [02:11<00:00]
INFO - Starting VBPR training!
[Epoch 1/20, Batch 2932/2932, Loss: 84.862]:  100%|██████████| 2932/2932 [00:23<00:00]
[Epoch 2/20, Batch 2932/2932, Loss: 60.355]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 3/20, Batch 2932/2932, Loss: 33.653]:  100%|██████████| 2932/2932 [00:23<00:00]
[Epoch 4/20, Batch 2932/2932, Loss: 16.716]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 5/20, Batch 2932/2932, Loss: 9.282]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 6/20, Batch 2932/2932, Loss: 6.011]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 7/20, Batch 2932/2932, Loss: 4.436]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 8/20, Batch 2932/2932, Loss: 3.571]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 9/20, Batch 2932/2932, Loss: 3.095]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 10/20, Batch 2932/2932, Loss: 2.781]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 11/20, Batch 2932/2932, Loss: 2.574]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 12/20, Batch 2932/2932, Loss: 2.444]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 13/20, Batch 2932/2932, Loss: 2.470]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 14/20, Batch 2932/2932, Loss: 2.516]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 15/20, Batch 2932/2932, Loss: 2.541]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 16/20, Batch 2932/2932, Loss: 2.623]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 17/20, Batch 2932/2932, Loss: 2.665]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 18/20, Batch 2932/2932, Loss: 2.659]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 19/20, Batch 2932/2932, Loss: 2.784]:  100%|██████████| 2932/2932 [00:22<00:00]
[Epoch 20/20, Batch 2932/2932, Loss: 2.788]:  100%|██████████| 2932/2932 [00:22<00:00]
INFO - Training complete!
INFO - Computing visual bias and theta items for faster ranking...
INFO - Done!
ClayRS model for 20 epochs saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\models\exp3\vbpr_clayrs_resnet50_20.ml!
Report of the RecSys phase for 20 epochs saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\yaml_clayrs\exp3_rs_report\rs_report_resnet50_20.yml!


############# Computing AUC for vgg19 and resnet50 representations #############

FM model is only supported on Linux.
Windows executable can be found at http://www.libfm.org.
Evaluating ClayRS:
********************************************************************************
Considering representation:  vgg19
********************************************************************************
Considering number of epochs 10
--------------------------------------------------------------------------------
AUC after evaluating 19243/19243 users ---> 0.704: 100%|██████████| 19243/19243 [06:14<00:00, 51.39it/s]
AUC: 0.7044327302833819, Elapsed time: 6m 14s

AUC sys results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp3\sys_result_clayrs_vgg19_10.csv!
AUC per user results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp3\users_results_clayrs_vgg19_10.csv!
--------------------------------------------------------------------------------
Considering number of epochs 20
--------------------------------------------------------------------------------
AUC after evaluating 19243/19243 users ---> 0.714: 100%|██████████| 19243/19243 [06:13<00:00, 51.49it/s]
AUC: 0.7144161236689591, Elapsed time: 6m 13s

AUC sys results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp3\sys_result_clayrs_vgg19_20.csv!
AUC per user results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp3\users_results_clayrs_vgg19_20.csv!
********************************************************************************
Considering representation:  resnet50
********************************************************************************
Considering number of epochs 10
--------------------------------------------------------------------------------
AUC after evaluating 19243/19243 users ---> 0.731: 100%|██████████| 19243/19243 [06:14<00:00, 51.36it/s]
AUC: 0.7313222775735104, Elapsed time: 6m 14s

AUC sys results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp3\sys_result_clayrs_resnet50_10.csv!
AUC per user results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp3\users_results_clayrs_resnet50_10.csv!
--------------------------------------------------------------------------------
Considering number of epochs 20
--------------------------------------------------------------------------------
AUC after evaluating 19243/19243 users ---> 0.748: 100%|██████████| 19243/19243 [07:06<00:00, 45.10it/s]
AUC: 0.7477940066215204, Elapsed time: 7m 6s

AUC sys results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp3\sys_result_clayrs_resnet50_20.csv!
AUC per user results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp3\users_results_clayrs_resnet50_20.csv!


#################### Computing ttest to compare AUC results ####################

--------------------------------------------------------------------------------
Considering number of epochs 10
--------------------------------------------------------------------------------
C:\Users\anton\Desktop\GitHub Projects\VBPR-Reproducibility\venv\lib\site-packages\clayrs\evaluation\statistical_test.py:34: FutureWarning: Passing a set as an indexer is deprecated and will raise in a future version. Use a list instead.
  df1 = df1[column_list_df1]
C:\Users\anton\Desktop\GitHub Projects\VBPR-Reproducibility\venv\lib\site-packages\clayrs\evaluation\statistical_test.py:35: FutureWarning: Passing a set as an indexer is deprecated and will raise in a future version. Use a list instead.
  df2 = df2[column_list_df2]
                           AUC
                     statistic        pvalue
sys_pair
(system_1, system_2) -9.788844  1.336040e-22

ttest results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\ttest_results\exp3\ttest_10.csv!
--------------------------------------------------------------------------------
Considering number of epochs 20
--------------------------------------------------------------------------------
C:\Users\anton\Desktop\GitHub Projects\VBPR-Reproducibility\venv\lib\site-packages\clayrs\evaluation\statistical_test.py:34: FutureWarning: Passing a set as an indexer is deprecated and will raise in a future version. Use a list instead.
  df1 = df1[column_list_df1]
C:\Users\anton\Desktop\GitHub Projects\VBPR-Reproducibility\venv\lib\site-packages\clayrs\evaluation\statistical_test.py:35: FutureWarning: Passing a set as an indexer is deprecated and will raise in a future version. Use a list instead.
  df2 = df2[column_list_df2]
                            AUC
                      statistic        pvalue
sys_pair
(system_1, system_2) -12.268351  1.554348e-34

ttest results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\ttest_results\exp3\ttest_20.csv!
