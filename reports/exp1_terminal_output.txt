(venv) C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility>python pipeline.py -epo 5 10 20 50 -exp exp1
########################### Downloading raw sources ############################

Downloading...
From: https://datarepo.eng.ucsd.edu/mcauley_group/data/tradesy/tradesy.json.gz
To: C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\raw\tradesy.json.gz
100%|██████████| 3.94M/3.94M [00:00<00:00, 8.43MB/s]

Tradesy raw feedback downloaded into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\raw\tradesy.json!
--------------------------------------------------------------------------------
Downloading binary file containing visual features...: 100%|██████████| 5.47G/5.47G [15:35<00:00, 6.27MiB/s]

Visual features downloaded into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\raw\image_features_tradesy.b!


####################### Filtering positive interactions ########################

Importing raw feedbacks...: 100%|██████████| 128152/128152 [00:06<00:00, 20197.24it/s]
Cardinality of raw dataset:
Number of users: 128152
Number of items: 184281
Number of positive interactions: 526233
--------------------------------------------------------------------------------
Cardinality of preprocessed dataset:
Number of users: 19243
Number of items: 165906
Number of positive interactions: 394421

Preprocessed dataset saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\interim\filtered_positive_interactions_tradesy.csv!


########################## Extracting visual features ##########################

Extracting only useful features from binary source...: 100%|██████████| 165906/165906 [04:28<00:00, 617.65it/s]
Feature extracted from binary source!
Total items extracted: 165906/165906

CSV containing mapping between item ids and features into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\processed\item_map.csv!
NPY feature matrix saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\processed\features_matrix.npy!


########################### Building train/test set ############################

Splitting interactions in train/test: 100%|██████████| 394421/394421 [00:01<00:00, 359393.78it/s]
0 interactions were skipped because involved missing items
0 users were skipped because they had less than one interaction (thus they couldn't be split in train/test)

Train set saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\processed\train_set.csv
Test set saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\processed\test_set.csv
User map saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\processed\user_map.csv


######################### Performing Cornac experiment #########################

FM model is only supported on Linux.
Windows executable can be found at http://www.libfm.org.
Random seed set as 42
--------------------------------------------------------------------------------
Considering number of epochs 5
--------------------------------------------------------------------------------
Epoch 1/5: 100%|██████████| 2932/2932 [00:44<00:00, 66.55it/s, loss=84.9]
Epoch 2/5: 100%|██████████| 2932/2932 [00:35<00:00, 83.68it/s, loss=60.1]
Epoch 3/5: 100%|██████████| 2932/2932 [00:35<00:00, 83.48it/s, loss=34.8]
Epoch 4/5: 100%|██████████| 2932/2932 [00:35<00:00, 83.62it/s, loss=18.4]
Epoch 5/5: 100%|██████████| 2932/2932 [00:35<00:00, 83.19it/s, loss=10.9]
Optimization finished!
Cornac model for 5 epochs saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\models\exp1\vbpr_cornac\vbpr_cornac_5.ml!
--------------------------------------------------------------------------------
Considering number of epochs 10
--------------------------------------------------------------------------------
Epoch 1/10: 100%|██████████| 2932/2932 [00:35<00:00, 83.76it/s, loss=84.9]
Epoch 2/10: 100%|██████████| 2932/2932 [00:34<00:00, 84.09it/s, loss=60.1]
Epoch 3/10: 100%|██████████| 2932/2932 [00:34<00:00, 84.22it/s, loss=34.8]
Epoch 4/10: 100%|██████████| 2932/2932 [00:34<00:00, 84.39it/s, loss=18.4]
Epoch 5/10: 100%|██████████| 2932/2932 [00:35<00:00, 83.72it/s, loss=10.9]
Epoch 6/10: 100%|██████████| 2932/2932 [00:34<00:00, 84.08it/s, loss=7.31]
Epoch 7/10: 100%|██████████| 2932/2932 [00:34<00:00, 83.85it/s, loss=5.67]
Epoch 8/10: 100%|██████████| 2932/2932 [00:34<00:00, 83.79it/s, loss=4.78]
Epoch 9/10: 100%|██████████| 2932/2932 [00:34<00:00, 83.94it/s, loss=4.23]
Epoch 10/10: 100%|██████████| 2932/2932 [00:34<00:00, 83.87it/s, loss=3.81]
Optimization finished!
Cornac model for 10 epochs saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\models\exp1\vbpr_cornac\vbpr_cornac_10.ml!
--------------------------------------------------------------------------------
Considering number of epochs 20
--------------------------------------------------------------------------------
Epoch 1/20: 100%|██████████| 2932/2932 [00:35<00:00, 83.67it/s, loss=84.9]
Epoch 2/20: 100%|██████████| 2932/2932 [00:34<00:00, 83.79it/s, loss=60.1]
Epoch 3/20: 100%|██████████| 2932/2932 [00:34<00:00, 83.78it/s, loss=34.8]
Epoch 4/20: 100%|██████████| 2932/2932 [00:34<00:00, 84.04it/s, loss=18.4]
Epoch 5/20: 100%|██████████| 2932/2932 [00:35<00:00, 83.53it/s, loss=10.9]
Epoch 6/20: 100%|██████████| 2932/2932 [00:35<00:00, 83.54it/s, loss=7.31]
Epoch 7/20: 100%|██████████| 2932/2932 [00:35<00:00, 82.64it/s, loss=5.67]
Epoch 8/20: 100%|██████████| 2932/2932 [00:35<00:00, 83.34it/s, loss=4.78]
Epoch 9/20: 100%|██████████| 2932/2932 [00:35<00:00, 83.51it/s, loss=4.23]
Epoch 10/20: 100%|██████████| 2932/2932 [00:35<00:00, 83.72it/s, loss=3.81]
Epoch 11/20: 100%|██████████| 2932/2932 [00:35<00:00, 82.64it/s, loss=3.66]
Epoch 12/20: 100%|██████████| 2932/2932 [00:34<00:00, 83.94it/s, loss=3.47]
Epoch 13/20: 100%|██████████| 2932/2932 [00:34<00:00, 83.88it/s, loss=3.41]
Epoch 14/20: 100%|██████████| 2932/2932 [00:35<00:00, 82.30it/s, loss=3.68]
Epoch 15/20: 100%|██████████| 2932/2932 [00:35<00:00, 83.30it/s, loss=3.6]
Epoch 16/20: 100%|██████████| 2932/2932 [00:35<00:00, 83.71it/s, loss=3.73]
Epoch 17/20: 100%|██████████| 2932/2932 [00:34<00:00, 83.86it/s, loss=3.94]
Epoch 18/20: 100%|██████████| 2932/2932 [00:35<00:00, 83.74it/s, loss=4.02]
Epoch 19/20: 100%|██████████| 2932/2932 [00:34<00:00, 83.85it/s, loss=4.15]
Epoch 20/20: 100%|██████████| 2932/2932 [00:34<00:00, 84.01it/s, loss=4.28]
Optimization finished!
Cornac model for 20 epochs saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\models\exp1\vbpr_cornac\vbpr_cornac_20.ml!
--------------------------------------------------------------------------------
Considering number of epochs 50
--------------------------------------------------------------------------------
Epoch 1/50: 100%|██████████| 2932/2932 [00:34<00:00, 84.31it/s, loss=84.9]
Epoch 2/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.96it/s, loss=60.1]
Epoch 3/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.87it/s, loss=34.8]
Epoch 4/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.95it/s, loss=18.4]
Epoch 5/50: 100%|██████████| 2932/2932 [00:34<00:00, 84.14it/s, loss=10.9]
Epoch 6/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.91it/s, loss=7.31]
Epoch 7/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.95it/s, loss=5.67]
Epoch 8/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.91it/s, loss=4.78]
Epoch 9/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.96it/s, loss=4.23]
Epoch 10/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.97it/s, loss=3.81]
Epoch 11/50: 100%|██████████| 2932/2932 [00:34<00:00, 84.17it/s, loss=3.66]
Epoch 12/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.95it/s, loss=3.47]
Epoch 13/50: 100%|██████████| 2932/2932 [00:34<00:00, 84.46it/s, loss=3.41]
Epoch 14/50: 100%|██████████| 2932/2932 [00:34<00:00, 84.10it/s, loss=3.68]
Epoch 15/50: 100%|██████████| 2932/2932 [00:34<00:00, 84.36it/s, loss=3.6]
Epoch 16/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.80it/s, loss=3.73]
Epoch 17/50: 100%|██████████| 2932/2932 [00:34<00:00, 84.31it/s, loss=3.94]
Epoch 18/50: 100%|██████████| 2932/2932 [00:34<00:00, 84.13it/s, loss=4.02]
Epoch 19/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.99it/s, loss=4.15]
Epoch 20/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.95it/s, loss=4.28]
Epoch 21/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.99it/s, loss=4.19]
Epoch 22/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.96it/s, loss=4.34]
Epoch 23/50: 100%|██████████| 2932/2932 [00:34<00:00, 84.02it/s, loss=4.42]
Epoch 24/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.84it/s, loss=4.45]
Epoch 25/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.86it/s, loss=4.56]
Epoch 26/50: 100%|██████████| 2932/2932 [00:35<00:00, 83.57it/s, loss=4.58]
Epoch 27/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.95it/s, loss=4.61]
Epoch 28/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.83it/s, loss=4.58]
Epoch 29/50: 100%|██████████| 2932/2932 [00:34<00:00, 84.41it/s, loss=4.71]
Epoch 30/50: 100%|██████████| 2932/2932 [00:34<00:00, 84.26it/s, loss=4.68]
Epoch 31/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.80it/s, loss=4.79]
Epoch 32/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.97it/s, loss=4.8]
Epoch 33/50: 100%|██████████| 2932/2932 [00:34<00:00, 84.24it/s, loss=4.78]
Epoch 34/50: 100%|██████████| 2932/2932 [00:34<00:00, 84.03it/s, loss=4.96]
Epoch 35/50: 100%|██████████| 2932/2932 [00:34<00:00, 84.14it/s, loss=4.86]
Epoch 36/50: 100%|██████████| 2932/2932 [00:35<00:00, 83.65it/s, loss=4.91]
Epoch 37/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.97it/s, loss=4.97]
Epoch 38/50: 100%|██████████| 2932/2932 [00:35<00:00, 83.39it/s, loss=4.83]
Epoch 39/50: 100%|██████████| 2932/2932 [00:34<00:00, 84.14it/s, loss=4.8]
Epoch 40/50: 100%|██████████| 2932/2932 [00:35<00:00, 83.45it/s, loss=4.93]
Epoch 41/50: 100%|██████████| 2932/2932 [00:35<00:00, 83.59it/s, loss=4.91]
Epoch 42/50: 100%|██████████| 2932/2932 [00:34<00:00, 84.24it/s, loss=5.07]
Epoch 43/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.89it/s, loss=5]
Epoch 44/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.83it/s, loss=5.08]
Epoch 45/50: 100%|██████████| 2932/2932 [00:34<00:00, 84.09it/s, loss=5.11]
Epoch 46/50: 100%|██████████| 2932/2932 [00:35<00:00, 83.65it/s, loss=5.1]
Epoch 47/50: 100%|██████████| 2932/2932 [00:35<00:00, 83.67it/s, loss=5.12]
Epoch 48/50: 100%|██████████| 2932/2932 [00:34<00:00, 84.38it/s, loss=5.13]
Epoch 49/50: 100%|██████████| 2932/2932 [00:34<00:00, 84.26it/s, loss=5.19]
Epoch 50/50: 100%|██████████| 2932/2932 [00:34<00:00, 83.83it/s, loss=5.3]
Optimization finished!
Cornac model for 50 epochs saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\models\exp1\vbpr_cornac\vbpr_cornac_50.ml!


######################### Performing ClayRS experiment #########################

--------------------------------------------------------------------------------
INFO - *********   Processing field: item_idx   *********
 100%|██████████| 165906/165906 [00:00<00:00]
Serializing contents:  100%|██████████| 165906/165906 [17:01<00:00]

Output of the Content Analyzer saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\data\exp1_ca_output!
Report of the Content Analyzer phase saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\yaml_clayrs\exp1_ca_report.yml!
--------------------------------------------------------------------------------
Importing ratings:  100%|██████████| 375178/375178 [00:01<00:00]
********************************************************************************
Performing VBPR training for representation:  imported_features
********************************************************************************
Considering number of epochs 5
--------------------------------------------------------------------------------
INFO - Filtering only positive interactions...
INFO - All interactions have score >= than threshold=0, no filtering is performed
Loading features from serialized items...:  100%|██████████| 165906/165906 [02:51<00:00]
INFO - Starting VBPR training!
[Epoch 1/5, Batch 2932/2932, Loss: 84.896]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 2/5, Batch 2932/2932, Loss: 60.084]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 3/5, Batch 2932/2932, Loss: 34.784]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 4/5, Batch 2932/2932, Loss: 18.433]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 5/5, Batch 2932/2932, Loss: 10.933]:  100%|██████████| 2932/2932 [00:25<00:00]
INFO - Training complete!
INFO - Computing visual bias and theta items for faster ranking...
INFO - Done!
ClayRS model for 5 epochs saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\models\exp1\vbpr_clayrs\vbpr_clayrs_imported_features_5.ml!
Report of the RecSys phase for 5 epochs saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\yaml_clayrs\exp1_rs_report\rs_report_imported_features_5.yml!
--------------------------------------------------------------------------------
Considering number of epochs 10
--------------------------------------------------------------------------------
INFO - Filtering only positive interactions...
INFO - All interactions have score >= than threshold=0, no filtering is performed
Loading features from serialized items...:  100%|██████████| 165906/165906 [03:02<00:00]
INFO - Starting VBPR training!
[Epoch 1/10, Batch 2932/2932, Loss: 84.896]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 2/10, Batch 2932/2932, Loss: 60.084]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 3/10, Batch 2932/2932, Loss: 34.784]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 4/10, Batch 2932/2932, Loss: 18.433]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 5/10, Batch 2932/2932, Loss: 10.933]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 6/10, Batch 2932/2932, Loss: 7.313]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 7/10, Batch 2932/2932, Loss: 5.677]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 8/10, Batch 2932/2932, Loss: 4.776]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 9/10, Batch 2932/2932, Loss: 4.227]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 10/10, Batch 2932/2932, Loss: 3.807]:  100%|██████████| 2932/2932 [00:25<00:00]
INFO - Training complete!
INFO - Computing visual bias and theta items for faster ranking...
INFO - Done!
ClayRS model for 10 epochs saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\models\exp1\vbpr_clayrs\vbpr_clayrs_imported_features_10.ml!
Report of the RecSys phase for 10 epochs saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\yaml_clayrs\exp1_rs_report\rs_report_imported_features_10.yml!
--------------------------------------------------------------------------------
Considering number of epochs 20
--------------------------------------------------------------------------------
INFO - Filtering only positive interactions...
INFO - All interactions have score >= than threshold=0, no filtering is performed
Loading features from serialized items...:  100%|██████████| 165906/165906 [03:04<00:00]
INFO - Starting VBPR training!
[Epoch 1/20, Batch 2932/2932, Loss: 84.896]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 2/20, Batch 2932/2932, Loss: 60.084]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 3/20, Batch 2932/2932, Loss: 34.784]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 4/20, Batch 2932/2932, Loss: 18.433]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 5/20, Batch 2932/2932, Loss: 10.933]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 6/20, Batch 2932/2932, Loss: 7.313]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 7/20, Batch 2932/2932, Loss: 5.677]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 8/20, Batch 2932/2932, Loss: 4.776]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 9/20, Batch 2932/2932, Loss: 4.227]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 10/20, Batch 2932/2932, Loss: 3.807]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 11/20, Batch 2932/2932, Loss: 3.660]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 12/20, Batch 2932/2932, Loss: 3.472]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 13/20, Batch 2932/2932, Loss: 3.410]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 14/20, Batch 2932/2932, Loss: 3.679]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 15/20, Batch 2932/2932, Loss: 3.595]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 16/20, Batch 2932/2932, Loss: 3.734]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 17/20, Batch 2932/2932, Loss: 3.941]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 18/20, Batch 2932/2932, Loss: 4.018]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 19/20, Batch 2932/2932, Loss: 4.149]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 20/20, Batch 2932/2932, Loss: 4.274]:  100%|██████████| 2932/2932 [00:25<00:00]
INFO - Training complete!
INFO - Computing visual bias and theta items for faster ranking...
INFO - Done!
ClayRS model for 20 epochs saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\models\exp1\vbpr_clayrs\vbpr_clayrs_imported_features_20.ml!
Report of the RecSys phase for 20 epochs saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\yaml_clayrs\exp1_rs_report\rs_report_imported_features_20.yml!
--------------------------------------------------------------------------------
Considering number of epochs 50
--------------------------------------------------------------------------------
INFO - Filtering only positive interactions...
INFO - All interactions have score >= than threshold=0, no filtering is performed
Loading features from serialized items...:  100%|██████████| 165906/165906 [03:07<00:00]
INFO - Starting VBPR training!
[Epoch 1/50, Batch 2932/2932, Loss: 84.896]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 2/50, Batch 2932/2932, Loss: 60.084]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 3/50, Batch 2932/2932, Loss: 34.784]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 4/50, Batch 2932/2932, Loss: 18.433]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 5/50, Batch 2932/2932, Loss: 10.933]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 6/50, Batch 2932/2932, Loss: 7.313]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 7/50, Batch 2932/2932, Loss: 5.677]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 8/50, Batch 2932/2932, Loss: 4.776]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 9/50, Batch 2932/2932, Loss: 4.227]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 10/50, Batch 2932/2932, Loss: 3.807]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 11/50, Batch 2932/2932, Loss: 3.660]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 12/50, Batch 2932/2932, Loss: 3.472]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 13/50, Batch 2932/2932, Loss: 3.410]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 14/50, Batch 2932/2932, Loss: 3.679]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 15/50, Batch 2932/2932, Loss: 3.595]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 16/50, Batch 2932/2932, Loss: 3.734]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 17/50, Batch 2932/2932, Loss: 3.941]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 18/50, Batch 2932/2932, Loss: 4.018]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 19/50, Batch 2932/2932, Loss: 4.149]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 20/50, Batch 2932/2932, Loss: 4.274]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 21/50, Batch 2932/2932, Loss: 4.195]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 22/50, Batch 2932/2932, Loss: 4.337]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 23/50, Batch 2932/2932, Loss: 4.426]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 24/50, Batch 2932/2932, Loss: 4.451]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 25/50, Batch 2932/2932, Loss: 4.565]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 26/50, Batch 2932/2932, Loss: 4.581]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 27/50, Batch 2932/2932, Loss: 4.609]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 28/50, Batch 2932/2932, Loss: 4.582]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 29/50, Batch 2932/2932, Loss: 4.709]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 30/50, Batch 2932/2932, Loss: 4.676]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 31/50, Batch 2932/2932, Loss: 4.793]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 32/50, Batch 2932/2932, Loss: 4.794]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 33/50, Batch 2932/2932, Loss: 4.775]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 34/50, Batch 2932/2932, Loss: 4.959]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 35/50, Batch 2932/2932, Loss: 4.863]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 36/50, Batch 2932/2932, Loss: 4.907]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 37/50, Batch 2932/2932, Loss: 4.970]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 38/50, Batch 2932/2932, Loss: 4.829]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 39/50, Batch 2932/2932, Loss: 4.799]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 40/50, Batch 2932/2932, Loss: 4.924]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 41/50, Batch 2932/2932, Loss: 4.914]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 42/50, Batch 2932/2932, Loss: 5.070]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 43/50, Batch 2932/2932, Loss: 5.001]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 44/50, Batch 2932/2932, Loss: 5.076]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 45/50, Batch 2932/2932, Loss: 5.108]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 46/50, Batch 2932/2932, Loss: 5.099]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 47/50, Batch 2932/2932, Loss: 5.115]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 48/50, Batch 2932/2932, Loss: 5.133]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 49/50, Batch 2932/2932, Loss: 5.194]:  100%|██████████| 2932/2932 [00:25<00:00]
[Epoch 50/50, Batch 2932/2932, Loss: 5.296]:  100%|██████████| 2932/2932 [00:25<00:00]
INFO - Training complete!
INFO - Computing visual bias and theta items for faster ranking...
INFO - Done!
ClayRS model for 50 epochs saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\models\exp1\vbpr_clayrs\vbpr_clayrs_imported_features_50.ml!
Report of the RecSys phase for 50 epochs saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\yaml_clayrs\exp1_rs_report\rs_report_imported_features_50.yml!


##################### Computing AUC for ClayRS and Cornac ######################

Evaluating ClayRS:
********************************************************************************
Considering representation:  imported_features
********************************************************************************
Considering number of epochs 5
--------------------------------------------------------------------------------
AUC after evaluating 19243/19243 users ---> 0.716: 100%|██████████| 19243/19243 [06:54<00:00, 46.44it/s]
AUC: 0.7156017452905251, Elapsed time: 6m 54s

AUC sys results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp1\results_clayrs\sys_result_clayrs_imported_features_5.csv!
AUC per user results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp1\results_clayrs\users_results_clayrs_imported_features_5.csv!
--------------------------------------------------------------------------------
Considering number of epochs 10
--------------------------------------------------------------------------------
AUC after evaluating 19243/19243 users ---> 0.713: 100%|██████████| 19243/19243 [06:05<00:00, 52.67it/s]
AUC: 0.7127759752701854, Elapsed time: 6m 5s

AUC sys results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp1\results_clayrs\sys_result_clayrs_imported_features_10.csv!
AUC per user results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp1\results_clayrs\users_results_clayrs_imported_features_10.csv!
--------------------------------------------------------------------------------
Considering number of epochs 20
--------------------------------------------------------------------------------
AUC after evaluating 19243/19243 users ---> 0.720: 100%|██████████| 19243/19243 [06:06<00:00, 52.44it/s]
AUC: 0.7201744826004, Elapsed time: 6m 6s

AUC sys results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp1\results_clayrs\sys_result_clayrs_imported_features_20.csv!
AUC per user results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp1\results_clayrs\users_results_clayrs_imported_features_20.csv!
--------------------------------------------------------------------------------
Considering number of epochs 50
--------------------------------------------------------------------------------
AUC after evaluating 19243/19243 users ---> 0.741: 100%|██████████| 19243/19243 [06:01<00:00, 53.16it/s]
AUC: 0.7412122666905948, Elapsed time: 6m 2s

AUC sys results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp1\results_clayrs\sys_result_clayrs_imported_features_50.csv!
AUC per user results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp1\results_clayrs\users_results_clayrs_imported_features_50.csv!


Evaluating Cornac:
--------------------------------------------------------------------------------
Considering number of epochs 5
--------------------------------------------------------------------------------
AUC: 0.7156017434107776, Elapsed time: 7m 33s

AUC sys results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp1\results_cornac\sys_result_cornac_5.csv
AUC per user results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp1\results_cornac\users_results_cornac_5.csv
--------------------------------------------------------------------------------
Considering number of epochs 10
--------------------------------------------------------------------------------
AUC: 0.7127759768370836, Elapsed time: 7m 29s

AUC sys results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp1\results_cornac\sys_result_cornac_10.csv
AUC per user results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp1\results_cornac\users_results_cornac_10.csv
--------------------------------------------------------------------------------
Considering number of epochs 20
--------------------------------------------------------------------------------
AUC: 0.7201744844800458, Elapsed time: 7m 29s

AUC sys results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp1\results_cornac\sys_result_cornac_20.csv
AUC per user results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp1\results_cornac\users_results_cornac_20.csv
--------------------------------------------------------------------------------
Considering number of epochs 50
--------------------------------------------------------------------------------
AUC: 0.7412122666902522, Elapsed time: 7m 29s

AUC sys results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp1\results_cornac\sys_result_cornac_50.csv
AUC per user results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\exp1\results_cornac\users_results_cornac_50.csv


#################### Computing ttest to compare AUC results ####################

--------------------------------------------------------------------------------
Considering number of epochs 5
--------------------------------------------------------------------------------
C:\Users\anton\Desktop\Github Projects\VBPR-Reproducibility\venv\lib\site-packages\clayrs\evaluation\statistical_test.py:34: FutureWarning: Passing a set as an indexer is deprecated and will raise in a future version. Use a list instead.
  df1 = df1[column_list_df1]
C:\Users\anton\Desktop\Github Projects\VBPR-Reproducibility\venv\lib\site-packages\clayrs\evaluation\statistical_test.py:35: FutureWarning: Passing a set as an indexer is deprecated and will raise in a future version. Use a list instead.
  df2 = df2[column_list_df2]
                               AUC
                         statistic    pvalue
sys_pair
(system_1, system_2)  6.825223e-07  0.999999

ttest results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\ttest_results\exp1\ttest_5.csv!
--------------------------------------------------------------------------------
Considering number of epochs 10
--------------------------------------------------------------------------------
C:\Users\anton\Desktop\Github Projects\VBPR-Reproducibility\venv\lib\site-packages\clayrs\evaluation\statistical_test.py:34: FutureWarning: Passing a set as an indexer is deprecated and will raise in a future version. Use a list instead.
  df1 = df1[column_list_df1]
C:\Users\anton\Desktop\Github Projects\VBPR-Reproducibility\venv\lib\site-packages\clayrs\evaluation\statistical_test.py:35: FutureWarning: Passing a set as an indexer is deprecated and will raise in a future version. Use a list instead.
  df2 = df2[column_list_df2]
                               AUC
                         statistic pvalue
sys_pair
(system_1, system_2) -5.647930e-07    1.0

ttest results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\ttest_results\exp1\ttest_10.csv!
--------------------------------------------------------------------------------
Considering number of epochs 20
--------------------------------------------------------------------------------
C:\Users\anton\Desktop\Github Projects\VBPR-Reproducibility\venv\lib\site-packages\clayrs\evaluation\statistical_test.py:34: FutureWarning: Passing a set as an indexer is deprecated and will raise in a future version. Use a list instead.
  df1 = df1[column_list_df1]
C:\Users\anton\Desktop\Github Projects\VBPR-Reproducibility\venv\lib\site-packages\clayrs\evaluation\statistical_test.py:35: FutureWarning: Passing a set as an indexer is deprecated and will raise in a future version. Use a list instead.
  df2 = df2[column_list_df2]
                               AUC
                         statistic    pvalue
sys_pair
(system_1, system_2) -6.808438e-07  0.999999

ttest results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\ttest_results\exp1\ttest_20.csv!
--------------------------------------------------------------------------------
Considering number of epochs 50
--------------------------------------------------------------------------------
C:\Users\anton\Desktop\Github Projects\VBPR-Reproducibility\venv\lib\site-packages\clayrs\evaluation\statistical_test.py:34: FutureWarning: Passing a set as an indexer is deprecated and will raise in a future version. Use a list instead.
  df1 = df1[column_list_df1]
C:\Users\anton\Desktop\Github Projects\VBPR-Reproducibility\venv\lib\site-packages\clayrs\evaluation\statistical_test.py:35: FutureWarning: Passing a set as an indexer is deprecated and will raise in a future version. Use a list instead.
  df2 = df2[column_list_df2]
                               AUC
                         statistic pvalue
sys_pair
(system_1, system_2)  1.266779e-10    1.0

ttest results saved into C:\Users\anton\Desktop\GitHub projects\VBPR-Reproducibility\reports\ttest_results\exp1\ttest_50.csv!
